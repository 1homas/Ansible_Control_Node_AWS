---
#
# Assumes environment variables for AWS:
# - AWS_REGION
#

project_name: ansible # tag all VPCs and resources
provider: AWS # infrastructure provider hint
domain_name: trust0.net # use 'aws.local' if you don't have one
ssh_key_directory: ~/.ssh
ssh_key_name: "{{ project_name }}"
ssh_key_private_file: "{{ ssh_key_directory }}/{{ ssh_key_name }}"
ssh_user: ubuntu

#
# AWS VPC
#
aws_region: "{{ lookup('env','AWS_REGION') | default('us-west-1') }}"
aws_vpc_name: "{{ project_name }}"
aws_vpc_cidr: 172.31.0.0/16
aws_public_subnet_cidr: 172.31.1.0/24
aws_private_subnet_cidr: 172.31.2.0/24
aws_public_access_cidr: 0.0.0.0/0

#
# Images: https://console.aws.amazon.com/ec2/v2/home#AMICatalog:
#   image_id: ami-04b6c97b14c54de18  # us-west-1 Amazon Linux 2 AMI (HVM)
#   image_id: ami-039da1612f6f41296  # us-west-1 Ubuntu Server 20.04 LTS 64-bit (Arm)
#   image_id: ami-054965c6cd7c6e462  # us-west-1 RHEL 8 64-bit (x86)
#   image_id: ami-05f88a4bcb91f4ea7  # us-west-1 RHEL 8 64-bit (Arm)
#
# Instance Types: https://console.aws.amazon.com/ec2/v2/home#InstanceTypes:
#

nodes:
  - name: ansible # must be DNS-friendly
    image_id: ami-08012c0a9ee8e21c4 # (64-bit (x86)) Ubuntu Server 24.04 LTS (HVM), SSD Volume Type
    # image_id: "{{ ubuntu_images['aws'][region]['23.04'] }}"
    instance_type: t2.micro # 1 vCPU | x86_64 | 1GB RAM
    security_group: sg_ping_ssh_only
    ssh_user: ubuntu
    # ssh_user: ec2-user          # use 'ec2-user' for Amazon Linux AMIs
    ssh_key_name: "{{ ssh_key_name }}"
    assign_public_ip: yes
    public_dns_name: "ansible.{{ domain_name }}"
    private_ip: 172.31.2.250
    private_dns_name: "ansible-internal.{{ domain_name }}"
    volume_size: 30 # GB
    tags:
      project: "{{ project_name }}"
      started: "{{ '%Y-%m-%dT%H:%M:%S-%z' | strftime }}"
